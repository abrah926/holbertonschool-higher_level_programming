The ``4-print_square`` module
=============================

Using ``print_square``
----------------------

Import the function:

    >>> print_square = __import__('4-print_square').print_square

Test with positive integer:
    >>> print_square(4)
    ####
    ####
    ####
    ####

Test with zero:
    >>> print_square(0)

Test with negative integer:
    >>> print_square(-1)
    Traceback (most recent call last):
    ...
    ValueError: size must be >= 0

Test with float:
    >>> print_square(4.5)
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

Test with string:
    >>> print_square("4")
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

Test with None:
    >>> print_square(None)
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

Test with large number:
    >>> print_square(10)
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########

Test with no argument:
    >>> print_square()
    Traceback (most recent call last):
    ...
    TypeError: print_square() missing 1 required positional argument: 'size'

Test with boolean:
    >>> print_square(True)
    #

Test with negative float:
    >>> print_square(-4.5)
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer